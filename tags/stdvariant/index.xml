<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>std::variant on HANDMADE LOG</title><link>https://seungrye.github.io/tags/stdvariant/</link><description>Recent content in std::variant on HANDMADE LOG</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 14 Nov 2020 00:00:00 +0900</lastBuildDate><atom:link href="https://seungrye.github.io/tags/stdvariant/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ Error Handling Revisited - Raphael Meyer 보면서 정리</title><link>https://seungrye.github.io/posts/2020-11-14-c++-error-handling-revisited/</link><pubDate>Sat, 14 Nov 2020 00:00:00 +0900</pubDate><guid>https://seungrye.github.io/posts/2020-11-14-c++-error-handling-revisited/</guid><description>&lt;p>C++ 에서 에러 처리를 어떻게 할수 있는지에 대해 알아보는 &lt;a href="https://youtu.be/Ybmomkc48wg">영상&lt;/a>을 보면서 정리(?) 한 내용입니다.&lt;/p>
&lt;p>영상에서는 haskell 예제를 보여주며 functional 컨셉을 설명하지만, (영어가 짧아 이해가 되지 않아) 단순히 변경되어가는 코드만 정리했습니다.
몇가지 코드(방법)이 더 있었는데 코드 자체가 이해가 안되서 정리하지 않았습니다.&lt;/p></description></item></channel></rss>